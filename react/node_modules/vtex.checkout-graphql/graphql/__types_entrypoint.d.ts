export type Maybe<T> = T | null;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string,
  String: string,
  Boolean: boolean,
  Int: number,
  Float: number,
  InputValues: any,
  /** 
 * productCategoriesObject is a Record<string, string>, in the following format:
   * { '<categoryNumber>': '<categoryName>' }
 */
  productCategoriesObject: any,
  IOMessage: any,
  IOSanitizedString: any,
  IOUpload: any,
  Upload: any,
};

export type AddedOptionItem = {
   __typename?: 'AddedOptionItem',
  item?: Maybe<Item>,
  compositionItem?: Maybe<CompositionItem>,
  normalizedQuantity?: Maybe<Scalars['Int']>,
  choiceType?: Maybe<Scalars['String']>,
  extraQuantity?: Maybe<Scalars['Int']>,
};

export type Address = {
   __typename?: 'Address',
  addressId?: Maybe<Scalars['ID']>,
  addressType?: Maybe<AddressType>,
  city?: Maybe<Scalars['String']>,
  complement?: Maybe<Scalars['String']>,
  country?: Maybe<Scalars['String']>,
  geoCoordinates?: Maybe<Array<Maybe<Scalars['Float']>>>,
  neighborhood?: Maybe<Scalars['String']>,
  number?: Maybe<Scalars['String']>,
  postalCode?: Maybe<Scalars['String']>,
  receiverName?: Maybe<Scalars['String']>,
  reference?: Maybe<Scalars['String']>,
  state?: Maybe<Scalars['String']>,
  street?: Maybe<Scalars['String']>,
};

export type AddressInput = {
  addressId?: Maybe<Scalars['ID']>,
  addressType?: Maybe<AddressType>,
  addressQuery?: Maybe<Scalars['String']>,
  city?: Maybe<Scalars['String']>,
  complement?: Maybe<Scalars['String']>,
  country?: Maybe<Scalars['String']>,
  geoCoordinates?: Maybe<Array<Maybe<Scalars['Float']>>>,
  neighborhood?: Maybe<Scalars['String']>,
  number?: Maybe<Scalars['String']>,
  postalCode?: Maybe<Scalars['String']>,
  receiverName?: Maybe<Scalars['String']>,
  reference?: Maybe<Scalars['String']>,
  state?: Maybe<Scalars['String']>,
  street?: Maybe<Scalars['String']>,
};

export const enum AddressType {
  Residential = 'residential',
  Commercial = 'commercial',
  InStore = 'inStore',
  GiftRegistry = 'giftRegistry',
  Pickup = 'pickup',
  Search = 'search'
};

export type AssemblyOptionInput = {
  assemblyId: Scalars['String'],
  id?: Maybe<Scalars['ID']>,
  quantity?: Maybe<Scalars['Int']>,
  seller?: Maybe<Scalars['String']>,
  inputValues?: Maybe<Scalars['InputValues']>,
  options?: Maybe<Array<AssemblyOptionInput>>,
};

export type AssemblyOptionItem = {
   __typename?: 'AssemblyOptionItem',
  added: Array<Maybe<AddedOptionItem>>,
  removed: Array<Maybe<RemovedOptionItem>>,
  parentPrice?: Maybe<Scalars['Float']>,
};

export type AssemblyOptionType = {
   __typename?: 'AssemblyOptionType',
  assemblyId: Scalars['String'],
  id?: Maybe<Scalars['ID']>,
  quantity?: Maybe<Scalars['Int']>,
  seller?: Maybe<Scalars['String']>,
  inputValues?: Maybe<Scalars['InputValues']>,
  options?: Maybe<Array<AssemblyOptionType>>,
};

export type CompositionItem = {
   __typename?: 'CompositionItem',
  id?: Maybe<Scalars['ID']>,
  minQuantity?: Maybe<Scalars['Int']>,
  maxQuantity?: Maybe<Scalars['Int']>,
  initialQuantity?: Maybe<Scalars['Int']>,
  priceTable?: Maybe<Scalars['String']>,
  seller?: Maybe<Scalars['String']>,
};

export type Coupon = {
   __typename?: 'Coupon',
  code?: Maybe<Scalars['String']>,
};

export type DeliveryOption = {
   __typename?: 'DeliveryOption',
  id?: Maybe<Scalars['String']>,
  price?: Maybe<Scalars['Int']>,
  estimate?: Maybe<Scalars['String']>,
  isSelected?: Maybe<Scalars['Boolean']>,
};

export type ImageUrls = {
   __typename?: 'ImageUrls',
  at1x: Scalars['String'],
  at2x: Scalars['String'],
  at3x: Scalars['String'],
};





export type Item = {
   __typename?: 'Item',
  additionalInfo?: Maybe<ItemAdditionalInfo>,
  assemblyOptions?: Maybe<AssemblyOptionItem>,
  availability?: Maybe<Scalars['String']>,
  detailUrl?: Maybe<Scalars['String']>,
  id: Scalars['ID'],
  imageUrls?: Maybe<ImageUrls>,
  listPrice: Scalars['Float'],
  measurementUnit?: Maybe<Scalars['String']>,
  name?: Maybe<Scalars['String']>,
  parentAssemblyBinding?: Maybe<Scalars['String']>,
  options?: Maybe<Array<Maybe<AssemblyOptionType>>>,
  price: Scalars['Float'],
  productCategories?: Maybe<Scalars['productCategoriesObject']>,
  productCategoryIds?: Maybe<Scalars['String']>,
  productId: Scalars['String'],
  productRefId?: Maybe<Scalars['String']>,
  quantity: Scalars['Float'],
  sellingPrice: Scalars['Float'],
  sellingPriceWithAssemblies?: Maybe<Scalars['Float']>,
  skuName?: Maybe<Scalars['String']>,
  skuSpecifications: Array<SkuSpecification>,
  uniqueId: Scalars['String'],
};

export type ItemAdditionalInfo = {
   __typename?: 'ItemAdditionalInfo',
  brandName?: Maybe<Scalars['String']>,
};

export type ItemInput = {
  id?: Maybe<Scalars['Int']>,
  index?: Maybe<Scalars['Int']>,
  quantity?: Maybe<Scalars['Float']>,
  seller?: Maybe<Scalars['ID']>,
  uniqueId?: Maybe<Scalars['String']>,
  inputValues?: Maybe<Scalars['InputValues']>,
  options?: Maybe<Array<Maybe<AssemblyOptionInput>>>,
};

export type MarketingData = {
   __typename?: 'MarketingData',
  coupon?: Maybe<Scalars['String']>,
};

export type Message = {
   __typename?: 'Message',
  code?: Maybe<Scalars['String']>,
  status?: Maybe<Scalars['String']>,
  text?: Maybe<Scalars['String']>,
};

export type Mutation = {
   __typename?: 'Mutation',
  addToCart?: Maybe<OrderForm>,
  updateItems?: Maybe<OrderForm>,
  insertCoupon?: Maybe<OrderForm>,
  estimateShipping?: Maybe<OrderForm>,
  selectDeliveryOption?: Maybe<OrderForm>,
};


export type MutationAddToCartArgs = {
  items?: Maybe<Array<Maybe<ItemInput>>>
};


export type MutationUpdateItemsArgs = {
  orderItems?: Maybe<Array<Maybe<ItemInput>>>
};


export type MutationInsertCouponArgs = {
  text?: Maybe<Scalars['String']>
};


export type MutationEstimateShippingArgs = {
  address?: Maybe<AddressInput>
};


export type MutationSelectDeliveryOptionArgs = {
  deliveryOptionId?: Maybe<Scalars['String']>
};

export type OrderForm = {
   __typename?: 'OrderForm',
  items: Array<Item>,
  canEditData: Scalars['Boolean'],
  shipping: Shipping,
  marketingData: MarketingData,
  totalizers: Array<Maybe<Totalizer>>,
  value: Scalars['Int'],
  messages: OrderFormMessages,
};

export type OrderFormMessages = {
   __typename?: 'OrderFormMessages',
  couponMessages: Array<Maybe<Message>>,
  generalMessages: Array<Maybe<Message>>,
};


export type Query = {
   __typename?: 'Query',
  orderForm?: Maybe<OrderForm>,
};

export type RemovedOptionItem = {
   __typename?: 'RemovedOptionItem',
  initialQuantity?: Maybe<Scalars['Int']>,
  removedQuantity?: Maybe<Scalars['Int']>,
  name?: Maybe<Scalars['String']>,
};

export type Shipping = {
   __typename?: 'Shipping',
  countries?: Maybe<Array<Maybe<Scalars['String']>>>,
  deliveryOptions?: Maybe<Array<Maybe<DeliveryOption>>>,
  selectedAddress?: Maybe<Address>,
  availableAddresses?: Maybe<Array<Maybe<Address>>>,
};

export type SkuSpecification = {
   __typename?: 'SKUSpecification',
  fieldName?: Maybe<Scalars['String']>,
  fieldValues: Array<Maybe<Scalars['String']>>,
};

export type Totalizer = {
   __typename?: 'Totalizer',
  id: Scalars['String'],
  name?: Maybe<Scalars['String']>,
  value: Scalars['Int'],
};


export {}